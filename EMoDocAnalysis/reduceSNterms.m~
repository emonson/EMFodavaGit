% load tdm_emo1nvj_112509.mat

% % Only keeping most frequent terms from each document
% [Y,I] = sort(tdm,1,'descend');
% 
% tdm2 = sparse(size(tdm,1),size(tdm,2));
% for ii = 1:size(I,2),
%     tdm2(I(1:50,ii),ii) = tdm(I(1:50,ii),ii);
% end
% 
% % Getting rid of the rest of the terms
% throw_out = sum(tdm2,2)==0;
% tdm2(throw_out,:) = [];
% terms2 = terms;
% terms2(throw_out) = [];
% 
% % Normalizing resulting tdm
% sum1 = sum(tdm2,1);
% for ii = 1:size(tdm2,2),
%    tdm2(:,ii) = tdm2(:,ii)/sum1(ii); 
% end

% Alternative starting point when not only keeping frequent terms
tdm2 = tdm;
terms2 = terms;

% Calculating "conditional entropy"
sum2 = sum(tdm2,2);
numel2 = sum(tdm2>0,2);
ratio2 = tdm2./repmat(sum2,[1 size(tdm2,2)]);
lratio2 = log(ratio2);
lratio2(isinf(lratio2)) = 0;
h2 = -1*sum(ratio2.*lratio2,2);

% Throwing out terms with high or low "conditional entropy"
throw_out = (h2<2.0|h2>4.0);
tdm2(throw_out,:) = [];
terms2(throw_out) = [];

% Normalizing resulting tdm
sum1 = sum(tdm2,1);
for ii = 1:size(tdm2,2),
   tdm2(:,ii) = tdm2(:,ii)/sum1(ii); 
end

% Calculating "normal" entropy
sum2b = sum(tdm2,2);
numel2b = sum(tdm2>0,2);
ratio2b = tdm2./repmat(sum2b,[1 size(tdm2,2)]);
lratio2b = log(ratio2b);
lratio2b(isinf(lratio2b)) = 0;
h2b = -1*sum(ratio2b.*lratio2b,2)./log(numel2b);
h2b(isnan(h2b)) = 0;

% Plotting number of terms in each 
figure; plot(sum(tdm2>0,1),'k.');
figure; hist(h2b,100);
